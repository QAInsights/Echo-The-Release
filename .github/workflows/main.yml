name: Echo the Release
on: [push]
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.ECHO_TOKEN }}
    - name: Repo 1
      run: |
        #t=$(curl -sL https://api.github.com/repos/QAInsights/Sample-Repo/releases/latest | jq -r ".tag_name")
        #if [ ${t} != null ]
        #then
        #  echo ${t} > Sample-Repo/echo.txt
        #fi
        echo "6" > Sample-Repo/echo.txt
        
    - name: Repo 3
      run: |
        t=$(curl -sL https://api.github.com/repos/QAInsights/Another-Sample-Repo/releases/latest | jq -r ".tag_name")
        if [ ${t} != null ]
        then
          echo ${t} > Another-Sample-Repo/echo.txt
        fi
     
    - name: Check for modified files
      id: git-check
      run: | 
        git diff --name-only | xargs -L1 dirname | uniq > changes.txt
        #echo $(wc -l changes.txt)
        while read p; do          
          if [ $p != "." ]
          then
            voice="New release for $p"
            k=${{ secrets.ECHO_KEY }}
            echo $p $k
            #msg=\'\'
            #echo ${msg}
            curl https://api.notifymyecho.com/v1/NotifyMe -H "Content-Type: application/json" -d ${msg} '{"notification":"New release is now available for '"$p"'.","accessCode":"'"$k"'"}'
          fi
        done <changes.txt        
        echo "" > changes.txt
      
    - name: Commit latest release version
      run: |
        git config --global user.name 'QAInsights'
        git config --global user.email 'catch.nkn@gmail.com'
        git commit -am "New release version"
        git push
